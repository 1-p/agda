Agda2> (agda2-status-action "")
(agda2-info-action "*Type-checking*" "" nil)
(agda2-highlight-clear)
(agda2-info-action "*Type-checking*" "Checking Auto-DataConstruction (Auto-DataConstruction.agda).\n" t)
(agda2-info-action "*Type-checking*" " Skipping Auto.Prelude (Auto/Prelude.agdai).\n" t)
(agda2-info-action "*Type-checking*" "Finished Auto-DataConstruction.\n" t)
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?0 : {X : Set} (xs ys : List X) → (xs ++ ys) ≡ (ys ++ xs)\n" nil)
((last . 1) . (agda2-goals-action '(0)))
Agda2> (agda2-status-action "")
(agda2-info-action "*Auto*" "Listing disproof(s) 0-0\n0  (suc zero ∷ []) (zero ∷ []) (λ ())\n" nil)
((last . 1) . (agda2-goals-action '(0)))
Agda2> Agda2> 