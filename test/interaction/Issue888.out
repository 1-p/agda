Agda2> (agda2-status-action "")
(agda2-info-action "*Type-checking*" "" nil)
(agda2-highlight-clear)
(agda2-info-action "*Type-checking*" "Checking Issue888 (Issue888.agda).\n" t)
(agda2-info-action "*Type-checking*" "Finished Issue888.\n" t)
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?0 : ℕ\n?1 : Set\n?2 : ℕ\n" nil)
((last . 1) . (agda2-goals-action '(0 1 2)))
Agda2> (agda2-status-action "")
(agda2-info-action "*Goal type etc.*" "Goal: ℕ\n————————————————————————————————————————————————————————————\nY : ℕ → Set\nX : Set\nA : Set" nil)
((last . 1) . (agda2-goals-action '(0 1 2)))
Agda2> (agda2-status-action "")
(agda2-info-action "*Context*" "A : Set\nX : Set\nY : ℕ → Set\nm : ℕ" nil)
((last . 1) . (agda2-goals-action '(0 1 2)))
Agda2> (agda2-status-action "")
(agda2-info-action "*Context*" "A : Set\nx : ℕ\ni : ℕ\nz : Singleton x" nil)
((last . 1) . (agda2-goals-action '(0 1 2)))
Agda2> 