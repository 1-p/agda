2014-07-29, adapted from agda-releases

When releasing a bugfix version of Agda, the following procedure can be
followed:

* Update in the bug tracker the milestone field of open issues to the
  next Agda version. (If the label for the next milestone version
  (e.g. Milestone-2.4.6) does not exist, create an issue asking for
  it).

* Get a clean Agda repository.

    MAJORVERSION=<current-Agda-version-eg-2.4.0>
    VERSION=<current-maintenance-version-eg-2.4.0.2>
    git clone git@github.com:agda/agda.git agda.release
    cd agda.release
    git checkout maint-$MAJORVERSION

* Clone the standard library branch related to the Agda bugfix
  version. Use the branch used by the `std-lib` target rule in the
  Makefile file. For example,

  (git clone https://github.com/agda/agda-stdlib.git --branch 2.4.2.1 \
      --single-branch std-lib)

* Create Everything.agda in the standard library

    cd std-lib
    make Everything.agda
    cd ..

* Finish the CHANGELOG.

* Update the README.md, if necessary.

* Update the LICENSE file, if necessary.

* Add a second source-repository section to Agda.cabal:

    source-repository this
      type:     git
      location: https://github.com/agda/agda
      tag:      $VERSION

* Remove -Werror from Agda.cabal.

  (Agda uses code generated by Cabal, Paths_Agda, and under some
  configurations this code gives rise to warnings.)

* Ensure that cabal haddock works (requires at least cabal-install
  version 1.20.0.3 using version 1.20.0.2 of the Cabal library):

    cabal configure && cabal haddock

* Ensure that the Emacs mode can be compiled without errors or
  warnings (except for the "cl package required at runtime" warning):

    (cd src/data/emacs-mode && \
      emacs --batch -L . -f batch-byte-compile *.el; \
      rm -f *.elc)

* Tag and build source distributions. (Do not forget to record the
  changes above first.)

    VERSION=<version>
    cabal configure && cabal sdist && cabal check
    cabal install
    git tag -a $VERSION -m "Agda $VERSION maintenance release"
    git archive --prefix=Agda-$VERSION/ -o Agda-$VERSION.tar HEAD
    gzip Agda-$VERSION.tar

* Ensure that all the packages build properly.

    BASE=`pwd`
    cd ${TMPDIR:-/tmp}
    tar xzf $BASE/Agda-$VERSION.tar.gz
    cd Agda-$VERSION
    autoconf
    ./configure
    make install CABAL_OPTIONS="--prefix=$PWD/usr"
    make test
    tar xzf $BASE/dist/Agda-$VERSION.tar.gz
    cd Agda-$VERSION
    cabal install

  Do not forget to test the Emacs mode.

* Upload the Cabal package using cabal upload.

    cd $BASE
    cabal upload dist/Agda-$VERSION.tar.gz

* Upload the archived tar-ball to code.haskell.org.

    scp Agda-$VERSION.tar.gz code.haskell.org:/srv/code/Agda/

* Update the Agda Wiki:

  ** Update the Download page:

     *** Move the current version information to the old releases
         section.

     *** Update the last release information.

  ** Update the Release Notes page (under Documentation).

  ** Update the Main page.

* Announce the release of the new version on the Agda mailing list.

* Update the version numbers in:

  Agda.cabal (thrice),
  src/data/emacs-mode/agda2-mode.el, and
  mk/paths.mk.

* Remove the tag from the "this" source-repository section from the Cabal
  file.

* Add a new header to CHANGELOG.

* Push all changes and merge into 'master' branch.

    git push --tags

    git checkout master
    git merge maint-$MAJORVERSION

* Restore version numbers in 'master'
  (possibly by just resolving the merge conflicts).

    Agda.cabal (thrice),
    src/data/emacs-mode/agda2-mode.el, and
    mk/paths.mk.

* Push master

    git push
